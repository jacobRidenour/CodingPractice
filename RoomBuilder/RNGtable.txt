// Drop RNG calculation for enemies defeated
int[] randomTable = { 
980, 342, 762, 323, 1004, 264, 166, 902,
311, 449, 668, 422, 240, 360, 115, 126,
182, 164, 278, 740, 868, 728, 852, 519,
904, 432, 1024, 969, 883, 611, 624, 297,
256, 459, 990, 462, 79, 606, 524, 165,
416, 613, 874, 831, 431, 488, 670, 632,
866, 183, 345, 358, 623, 1003, 925, 815,
140, 628, 748, 887, 376, 851, 382, 384,
500, 98, 96, 749, 265, 92, 406, 68,
626, 892, 882, 289, 1018, 235, 621, 944,
674, 794, 987, 123, 545, 774, 457, 10,
729, 567, 477, 553, 953, 327, 798, 192,
952, 378, 554, 450, 811, 446, 938, 402,
270, 448, 875, 351, 420, 187, 860, 210,
404, 562, 687, 1001, 918, 471, 764, 756,
173, 790, 940, 697, 659, 671, 699, 954,
1006, 136, 675, 961, 711, 307, 355, 678,
36, 487, 472, 167, 920, 1023, 986, 594,
380, 6, 194, 810, 673, 660, 399, 52,
333, 101, 722, 332, 439, 272, 970, 604,
249, 350, 251, 873, 839, 349, 32, 922,
2, 512, 97, 379, 163, 751, 469, 793,
14, 557, 364, 871, 94, 391, 5, 365,
770, 530, 718, 828, 385, 772, 314, 21,
515, 754, 506, 57, 855, 677, 90, 766,
369, 575, 513, 223, 739, 863, 865, 130,
45, 119, 442, 132, 558, 490, 495, 809,
269, 70, 1000, 931, 667, 138, 405, 644,
763, 966, 29, 37, 507, 978, 151, 84,
195, 216, 849, 170, 400, 903, 614, 789,
958, 134, 503, 956, 99, 69, 876, 988,
648, 572, 807, 489, 455, 688, 77, 230,
732, 665, 656, 46, 816, 110, 58, 179,
565, 715, 679, 780, 142, 425, 820, 156,
146, 936, 997, 9, 475, 964, 640, 622,
881, 989, 492, 205, 556, 592, 962, 239,
109, 15, 634, 325, 411, 695, 812, 646,
643, 601, 992, 691, 585, 436, 35, 284,
474, 795, 765, 636, 879, 627, 733, 602,
198, 287, 257, 329, 745, 786, 171, 536,
424, 672, 241, 202, 802, 116, 71, 331,
514, 858, 568, 266, 234, 599, 43, 517,
573, 316, 91, 840, 561, 452, 1019, 370,
361, 56, 172, 398, 304, 102, 89, 579,
652, 975, 984, 85, 16, 464, 853, 117,
137, 736, 919, 608, 162, 509, 417, 889,
650, 993, 996, 825, 844, 245, 169, 418,
199, 310, 484, 44, 967, 635, 681, 714,
676, 461, 726, 324, 788, 734, 1002, 203,
321, 854, 584, 396, 113, 121, 977, 838,
950, 796, 190, 105, 408, 845, 974, 407,
124, 371, 580, 147, 433, 298, 238, 813,
280, 847, 300, 177, 491, 440, 928, 168,
625, 338, 576, 347, 328, 214, 971, 645,
196, 468, 87, 373, 842, 81, 800, 339,
615, 414, 960, 610, 710, 148, 589, 724,
683, 957, 219, 633, 775, 340, 535, 193,
706, 878, 275, 521, 690, 528, 129, 410,
641, 206, 155, 114, 108, 856, 362, 243,
717, 262, 335, 443, 501, 454, 836, 176,
111, 760, 927, 963, 523, 669, 899, 293,
112, 76, 20, 808, 53, 560, 143, 285,
520, 746, 527, 482, 511, 757, 525, 447,
549, 884, 758, 485, 276, 25, 7, 430,
86, 1020, 294, 817, 595, 929, 26, 423,
890, 309, 897, 312, 127, 574, 208, 829,
577, 175, 374, 100, 390, 392, 1009, 982,
658, 188, 381, 144, 232, 848, 933, 313,
901, 684, 93, 1011, 226, 250, 271, 1017,
277, 159, 104, 924, 617, 564, 661, 965,
543, 320, 943, 258, 233, 550, 721, 638,
716, 82, 217, 843, 375, 23, 228, 150,
178, 8, 189, 750, 480, 237, 152, 620,
4, 429, 261, 912, 824, 934, 731, 428,
951, 932, 145, 941, 680, 777, 973, 366,
125, 181, 586, 578, 211, 221, 107, 841,
394, 306, 88, 542, 465, 600, 707, 303,
548, 213, 268, 103, 985, 779, 655, 713,
629, 295, 31, 792, 547, 470, 805, 915,
486, 1005, 246, 120, 769, 288, 161, 682,
905, 330, 473, 498, 388, 563, 926, 139,
546, 913, 832, 39, 639, 653, 539, 885,
227, 712, 483, 531, 526, 386, 186, 341,
74, 1010, 979, 581, 463, 999, 279, 942,
78, 401, 426, 281, 907, 427, 19, 823,
877, 24, 38, 372, 1014, 18, 158, 22,
861, 504, 703, 412, 529, 478, 244, 900,
460, 742, 441, 267, 95, 935, 597, 274,
618, 212, 54, 709, 916, 708, 389, 767,
886, 1008, 870, 949, 33, 981, 302, 801,
481, 968, 930, 12, 63, 559, 955, 343,
191, 62, 761, 413, 445, 377, 654, 451,
13, 921, 456, 141, 804, 356, 591, 972,
694, 149, 637, 395, 552, 493, 254, 231,
664, 959, 1007, 850, 612, 609, 582, 785,
273, 917, 354, 516, 352, 283, 67, 666,
909, 730, 510, 263, 616, 322, 662, 835,
252, 55, 755, 197, 499, 799, 224, 948,
48, 587, 1022, 1013, 157, 497, 65, 864,
797, 994, 803, 458, 496, 737, 72, 494,
735, 693, 649, 368, 337, 869, 827, 290,
537, 998, 3, 255, 596, 701, 895, 743,
1012, 353, 738, 209, 336, 720, 702, 773,
784, 259, 317, 598, 910, 357, 318, 647,
30, 50, 80, 359, 894, 893, 135, 508,
466, 66, 685, 421, 51, 128, 154, 479,
502, 83, 438, 41, 657, 118, 242, 725,
397, 444, 64, 787, 705, 723, 782, 180,
631, 207, 590, 551, 204, 344, 282, 859,
846, 696, 522, 305, 73, 518, 34, 819,
923, 334, 453, 40, 821, 571, 991, 776,
642, 872, 976, 867, 727, 1021, 538, 393,
434, 741, 260, 593, 814, 719, 17, 215,
222, 607, 200, 467, 174, 248, 566, 583,
61, 791, 11, 939, 42, 286, 747, 532,
185, 896, 744, 220, 49, 292, 698, 253,
419, 806, 995, 296, 541, 299, 122, 367,
60, 768, 218, 319, 225, 569, 403, 663,
555, 229, 291, 605, 906, 346, 651, 435,
59, 348, 153, 700, 822, 898, 830, 908,
47, 911, 771, 505, 75, 415, 28, 383,
778, 833, 914, 409, 534, 826, 236, 544,
184, 588, 27, 891, 704, 781, 888, 752,
131, 315, 983, 201, 326, 783, 533, 1016,
1, 133, 308, 619, 946, 160, 857, 363,
837, 692, 947, 301, 937, 862, 603, 106,
437, 247, 630, 753, 686, 540, 759, 818,
689, 1015, 834, 880, 476, 570, 945, 387
}

//Subsection to jump into after enemy.Death()

int[] drops = enemy.getDropRates();
//int[6] with drop rates for nothing, PBs, small energy, supers, large energy, missiles
//example: 16, 204, 408, 610, 814
//i.e. 0-15 drops nothing, 16-203 drops PBs, etc. up to 1023
//Alternately, as a table of percentages: 0.16, 0.33, 0.21, 0.24, 0.06 ? 

int NO_DROP_RATE = drops[0];
int PB_RATE = drops[1];
int SMALL_RATE = drops[2];
int SUPER_RATE = drops[3];
int LARGE_RATE = drops[4];
int MISSILE_RATE = drops[5];

//get a random index from randomTable
int index = srand() % 1024;
int randomNumber = randomTable[index];

//GOALS:
// - if HP is full, add small/large HP drop rate to missile drop, set HP drop rate to 0
// - if missiles are full, add missile drop rate to small/large HP drop, set missile drop rate to 0
// - if both HP and missiles are full, add small/large HP & missile drop rates together, cut in half, set small/large HP & missile drop rate to 0
// --- add half to nothing drop rate; split remaining half again
// ------ case: EITHER supers<max or PBs<max: add one half to super drop rate; add other half to PB drop rate
// ------ case: supers=MAX: add both halves to PB drop rate
// ------ case: PBs=MAX: add both halves to supers drop rate

